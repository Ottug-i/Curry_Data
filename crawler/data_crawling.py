# -*- coding: utf-8 -*-
"""Data_Crawling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11b7GkLaVWJTVs_O9YdmOIMn79szVXom9
"""

!pip install BeautifulSoup4

import requests
from bs4 import BeautifulSoup
import re

# 만개의 매거진 Main 레시피 id 크롤링
def MainRecipeIdCrawler(pageId):

    # for i in range(1, pageId + 1):
    # url = f'https://www.10000recipe.com/issue/view.html?cid=10000mag&page={i}'

    url = 'https://www.10000recipe.com/issue/view.html?cid=10000mag&page=' + pageId

    response = requests.get(url)
    html = response.text
    soup = BeautifulSoup(html, 'html.parser')

    main_recipe_id = [] # Main 레시피 id

    # Main 레시피 id
    elements = soup.select('#contents_area_full > div.chef_cont > div > div > a.thumbnail')
    for element in elements:
        id = re.sub(r'\D', '', element['href'])
        main_recipe_id.append(id)

    return(main_recipe_id)

# 만개의 매거진 1페이지
MainRecipeIdCrawler(str(1))

# 만개의 매거진 Sub 레시피 id 크롤링
def SubRecipeIdCrawler(main_recipe_id):

    url = 'https://www.10000recipe.com/recipe/' + main_recipe_id

    response = requests.get(url)
    html = response.text
    soup = BeautifulSoup(html, 'html.parser')

    sub_recipe_id = [] # Sub 레시피 id

    # Sub 레시피 id 및 이름
    elements = soup.select('#contents_area > div > div.view_step_cont')
    for element in elements:
        id = re.sub(r'\D', '', element.find('a')['href'])
        sub_recipe_id.append(id)

    return(sub_recipe_id)

# 도시락에 빠질 수 없는 ✿유부초밥✿ 레시피 모음 (연어유부초밥, 크래미유부초밥, 명란마요유부초밥, 새우유부밥, 삼색유부초밥)
SubRecipeIdCrawler(str(6988334))

# 레시피 하나만 크롤링
recipe_list = [] # 레시피 리스트

def RecipeCrawler(recipeId):
    url = 'https://www.10000recipe.com/recipe/' + recipeId

    response = requests.get(url)
    html = response.text
    soup = BeautifulSoup(html, 'html.parser')

    # 레시피 id
    id = recipeId

    # 레시피 이름
    name = soup.select_one('#relationGoods > div.best_tit')
    name = name.get_text().split()[0]

    # 레시피 썸네일
    thumbnail = soup.select_one('#contents_area > div.view2_pic > div.centeredcrop img')['src']

    # 레시피 시간
    time = soup.select_one('#contents_area > div.view2_summary.st3 > div.view2_summary_info > span.view2_summary_info2').get_text()

    # 레시피 난이도
    difficulty = soup.select_one('#contents_area > div.view2_summary.st3 > div.view2_summary_info > span.view2_summary_info3').get_text()

    # 레시피 구성 (정보 없음)
    composition = '든든하게'

    # 레시피 재료
    elements = soup.select_one('#divConfirmedMaterialArea > ul:nth-child(1)')
    tmp = ''
    for element in elements.select('li'):
        ingredient = re.sub(r'\s+', ' ', element.get_text().replace('구매', '').strip()) # 구매 링크 제외
        tmp = tmp + ('#' + ingredient)
    ingredients = tmp
    
    # 레시피 양념
    try:
        elements = soup.select_one('#divConfirmedMaterialArea > ul:nth-child(2)')
        tmp = ''
        for element in elements.select('li'):
            seasoning = re.sub(r'\s+', ' ', element.get_text().replace('구매', '').strip()) # 구매 링크 제외
            tmp = tmp + ('#' + seasoning)
        seasoning = tmp
    except AttributeError:
        seasoning = ''
    else:
        pass

    # 레시피 조리 순서 및 사진
    elements = soup.select_one('#contents_area > div:nth-child(16)')
    elements = elements.find_all('div', 'view_step_cont')
    tmp1 = ''
    tmp2 = ''
    for i, element in enumerate(elements, start=1):
        order = element.find('div', 'media-body')
        order = ''.join(order.findAll(string=True, recursive=False)).strip() # 조리 순서에서 설명, 주방 도구 제외
        tmp1 = tmp1 + ('#' + str(i) + '. ' + order)
        photo = element.find('img')['src']
        tmp2 = tmp2 + ('#' + photo)
    orders = tmp1
    photo = tmp2

    recipe_list.append([id, name, thumbnail, time, difficulty, composition, ingredients, seasoning, orders, photo])
                                     
    return(recipe_list)

# 연어유부초밥 (만개의 매거진의 레시피)
RecipeCrawler(str(6909678))

# 크래미유부초밥 (만개의 매거진의 레시피)
RecipeCrawler(str(6916853))

# 치즈케이크 (만개의 레시피의 레시피)
RecipeCrawler(str(6992105))